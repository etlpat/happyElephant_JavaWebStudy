
（1）myBatis-plus介绍
    MyBatis-Plus（简称 MP）是一个 MyBatis 的增强工具，在 MyBatis 的基础上【只做增强不做改变】，为简化开发、提高效率而生。
    特性：
        无侵入：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑
        损耗小：启动即会自动注入基本 CURD，性能基本无损耗，直接面向对象操作
        强大的CRUD操作：内置通用 Mapper、通用 Service，仅仅通过少量配置即可实现单表大部分 CRUD 操作，更有强大的条件构造器，满足各类使用需求
        支持Lambda形式调用：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错
        支持主键自动生成：支持多达 4 种主键策略（内含分布式唯一 ID 生成器 - Sequence），可自由配置，完美解决主键问题
        支持ActiveRecord模式：支持 ActiveRecord 形式调用，实体类只需继承 Model 类即可进行强大的 CRUD 操作
        支持自定义全局通用操作：支持全局通用方法注入（ Write once, use anywhere ）
        内置代码生成器：采用代码或者 Maven 插件可快速生成 Mapper 、 Model 、 Service 、 Controller 层代码，支持模板引擎，更有超多自定义配置等您来使用
        内置分页插件：基于 MyBatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等同于普通 List 查询
        分页插件支持多种数据库：支持 MySQL、MariaDB、Oracle、DB2、H2、HSQL、SQLite、Postgre、SQLServer 等多种数据库
        内置性能分析插件：可输出 SQL 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出慢查询
        内置全局拦截插件：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防误操作
    mybatis-plus总结：
        自动生成【单表】的CRUD功能
        提供丰富的条件拼接方式
        全自动ORM类型持久层框架


（2）springBoot整合myBatis-plus步骤：
    (0)导入myBatis-plus的相关依赖。
    (1)创建mapper接口，使其继承myBatis-plus提供的BaseMapper接口。
        注意：BaseMapper<xxx>接口的泛型，用于定义要操纵的table表对应的pojo实体类。
            继承BaseMapper接口后，myBatis-plus会为mapper接口提供对table表进行单表CRUD的全部方法，并自动实现对应的mapperXml文件中的全部sql语句。
    (2)在application.yml配置文件中，对druid连接池和myBatis-plus进行配置。
    (3)为springBoot启动的类Main，添加@MapperScan注解，用于扫描mapper接口所在的包。
    以上步骤结束后，myBatis-plus就会将mapper接口的代理对象添加到ioc容器中。使用代理对象的特定方法即可完成对数据库的CRUD操作。