<2>基于注解方式实现springAOP


1.springAOP基础使用介绍

    (1)springAOP底层技术组成
        ①springAOP框架
        ↓
        ②AspectJ注解层
        |   AspectJ：早期的AOP实现的框架，SpringAOP借用了AspectJ中的AOP注解。
        ↓
        ③具体实现层（动态代理：JDK原生/cglib）
            JDK原生：需要目标类必须实现接口 -- 因为该技术要求代理对象和目标对象实现同样的接口。
            cglib：不需要目标类实现接口 -- 因为该技术通过继承被代理的目标类实现动态代理。


    (2)springAOP的实现步骤
        <1>编写核心代码
            ①在Maven工程的pom.xml中导入依赖（jar包）
            ②正常编写业务代码，如MVC架构中类的编写
            ③为组件类添加IoC/DI注解
            ④创建java配置类，编写配置信息
            ⑤在测试环境中，创建IoC容器，并通过它获取组件对象

        <2>编写切面代码
            ①定义增强类，在其中编写增强方法
            ②使用注解配置增强类/方法（插入切点位置/切点的指定/切面配置等）
            ③开启aop的配置
